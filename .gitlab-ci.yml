# SPDX-FileCopyrightText: 2023 Christian Mee√üen (GFZ) <christian.meessen@gfz-potsdam.de>
# SPDX-FileCopyrightText: 2023 Helmholtz Centre Potsdam - GFZ German Research Centre for Geosciences
#
# SPDX-License-Identifier: EUPL-1.2

stages:
  - build

.docker_login_gitlab_registry: &docker_login_gitlab_registry
  - echo "$CI_BUILD_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY

.build_and_push_image: &build_and_push_image
  - if test -z "${DOCKERFILE}"; then echo "Variable DOCKERFILE undefined."; exit 1; fi
  - if test -z "${DOCKER_CONTEXT}"; then echo "Variable DOCKER_CONTEXT undefined."; exit 2; fi
  - if test -z "${IMAGE_NAME}"; then echo "Variable IMAGE_NAME undefined."; exit 3; fi
  - docker build -t ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_TAG} -f ${DOCKERFILE} ${DOCKER_CONTEXT}
  - docker push ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_TAG}

default:
  image: docker:23
  services:
    - docker:dind

build-auth:
  stage: build
  tags:
    - docker
    - dind
  variables:
    DOCKERFILE: "authentication/Dockerfile"
    DOCKER_CONTEXT: "authentication"
    IMAGE_NAME: "auth"
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - *docker_login_gitlab_registry
  script:
    - *build_and_push_image

build-backend:
  stage: build
  tags:
    - docker
    - dind
  variables:
    DOCKERFILE: "backend-postgrest/Dockerfile"
    DOCKER_CONTEXT: "backend-postgrest"
    IMAGE_NAME: "backend"
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - *docker_login_gitlab_registry
  script:
    - *build_and_push_image

build-database:
  stage: build
  tags:
    - docker
    - dind
  variables:
    DOCKERFILE: "database/Dockerfile"
    DOCKER_CONTEXT: "database"
    IMAGE_NAME: "database"
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - *docker_login_gitlab_registry
  script:
    - *build_and_push_image

build-frontend:
  stage: build
  tags:
    - docker
    - dind
  variables:
    DOCKERFILE: "frontend/Dockerfile"
    DOCKER_CONTEXT: "frontend"
    IMAGE_NAME: "frontend"
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - *docker_login_gitlab_registry
    - rm -rf ./frontend/public
    - mv ./deployment/helmholtz ./frontend/public
  script:
    - *build_and_push_image

build-scrapers:
  stage: build
  tags:
    - docker
    - dind
  variables:
    DOCKERFILE: "scrapers/Dockerfile"
    DOCKER_CONTEXT: "scrapers"
    IMAGE_NAME: "scrapers"
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - *docker_login_gitlab_registry
  script:
    - *build_and_push_image
